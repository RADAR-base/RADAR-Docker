---
version: '2.2'

volumes:
  grafana-lib: {}
  grafana-log: {}

services:
  #---------------------------------------------------------------------------#
  # RADAR Grafana Dashboard                                                   #
  #---------------------------------------------------------------------------#
  radar-jdbc-connector:
    image: radarbase/radar-jdbc-connector:latest
    restart: on-failure
    volumes:
      - ./etc/jdbc-connector/sink-timescale.properties:/etc/kafka-connect/sink-timescale.properties
    environment:
      CONNECT_BOOTSTRAP_SERVERS: ${KAFKA_1_HOST},${KAFKA_2_HOST},${KAFKA_3_HOST}
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'default'
      CONNECT_CONFIG_STORAGE_TOPIC: 'default.config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'default.offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'default.status'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_OFFSET_STORAGE_FILE_FILENAME: '/var/lib/kafka-connect-jdbc/logs/connect.offsets'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'radar-jdbc-connector'
      CONNECT_ZOOKEEPER_CONNECT: ${ZOOKEEPER_1_HOST},${ZOOKEEPER_2_HOST},${ZOOKEEPER_3_HOST}
      CONNECTOR_PROPERTY_FILE_PREFIX: 'sink-timescale'
      KAFKA_HEAP_OPTS: '-Xms256m -Xmx3g'
      KAFKA_BROKERS: 3
      CONNECT_LOG4J_LOGGERS: 'org.reflections=ERROR'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "curl  -sf localhost:8083/connectors/radar-timescale-sink/status | grep -o '\"state\":\"[^\"]*\"' | tr '\\n' ',' | grep -vq FAILED || exit 1",
        ]
      interval: 1m
      timeout: 5s
      retries: 3

  timescaledb:
    image: timescale/timescaledb:latest-pg11
    volumes:
      - '${TIMESCALEDB_DIR}/data/:/var/lib/postgresql/data/'
    environment:
      TIMESCALEDB_TELEMETRY: 'off'
      POSTGRES_USER: grafana
      POSTGRES_PASSWORD: ${TIMESCALEDB_PASSWORD}
      POSTGRES_DB: ${TIMESCALEDB_DB}

  grafana:
    image: radarbase/radar-grafana:dev
    user: '1000'
    volumes:
      - grafana-lib:/var/lib/grafana
      - grafana-log:/var/log/grafana
    ports: 
      - 80:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_SERVER_ROOT_URL: https://${SERVER_NAME}/grafana
      GF_SERVER_SERVE_FROM_SUB_PATH: 'true'
      GF_SMTP_HOST: ${GRAFANA_SMTP_HOST}
      GF_SMTP_ENABLED: ${GRAFANA_SMTP_ENABLED}
      POSTGRES_DB: ${TIMESCALEDB_DB}
      POSTGRES_PASSWORD: ${TIMESCALEDB_PASSWORD}
      POSTGRES_HOST: timescaledb:5432

  netdata-slave:
    image: netdata/netdata:v1.17.0
    privileged: true
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./etc/netdata/slave/stream.conf:/etc/netdata/stream.conf:ro
      - ./etc/netdata/slave/netdata.conf:/etc/netdata/netdata.conf:ro
    environment:
      PGID: 999
    