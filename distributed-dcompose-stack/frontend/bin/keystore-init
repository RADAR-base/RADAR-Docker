#!/bin/bash

cd "$( dirname "${BASH_SOURCE[0]}" )/.."

. ./.env

function createKeyStore() {
  file=$1

  if ! keytool -list $KEYTOOL_OPTS -alias radarbase-managementportal-ec >/dev/null 2>/dev/null; then
    KEYTOOL_CREATE_OPTS="-genkeypair -alias radarbase-managementportal-ec -keyalg EC -keysize 256 -sigalg SHA256withECDSA -storetype PKCS12 $KEYSTORE_CREATE_OPTS"
    if [ -n "${MANAGEMENTPORTAL_KEY_DNAME}" ]; then
      KEYTOOL_CREATE_OPTS="$KEYTOOL_CREATE_OPTS -dname ${MANAGEMENTPORTAL_KEY_DNAME}"
    fi
    echo "--> Generating keystore to hold EC keypair for JWT signing"
    keytool $KEYTOOL_CREATE_OPTS $KEYTOOL_OPTS
  else
    echo "--> ECDSA keypair for signing JWTs already exists. Not creating a new one."
  fi

  if ! keytool -list $KEYTOOL_OPTS -alias selfsigned >/dev/null 2>/dev/null; then
    KEYTOOL_CREATE_OPTS="-genkeypair -alias selfsigned -keyalg RSA -keysize 4096 -storetype PKCS12 $KEYSTORE_CREATE_OPTS"
    if [ -n "${MANAGEMENTPORTAL_KEY_DNAME}" ]; then
      KEYTOOL_CREATE_OPTS="$KEYTOOL_CREATE_OPTS -dname ${MANAGEMENTPORTAL_KEY_DNAME}"
    fi
    echo "--> Generating keystore to hold RSA keypair for JWT signing"
    keytool $KEYTOOL_CREATE_OPTS $KEYTOOL_OPTS
  else
    echo "--> RSA keypair for signing JWTs already exists. Not creating a new one."
  fi

  chmod 400 "$file"
}

function convertJksToPkcs12() {
  src=$1
  dest=$2

  if [ ! -e $dest ] && [ -e $src ]; then
    echo "--> Importing PKCS12 key store from existing JKS key store"
    keytool -importkeystore -srckeystore $src -destkeystore $dest -srcstoretype JKS -deststoretype PKCS12 -deststorepass radarbase -srcstorepass radarbase
    chmod 400 $dest
  fi
}

keystorefile=etc/managementportal/config/keystore.p12
oldkeystorefile=etc/managementportal/config/keystore.jks

convertJksToPkcs12 $oldkeystorefile $keystorefile

export KEYTOOL_OPTS="-keystore ${keystorefile} -storepass radarbase -keypass radarbase $KEYSTORE_INIT_OPTS"

createKeyStore "$keystorefile"
